#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include<stdbool.h>


//modulo dado
//modulo jugador 1
//modulo jugador 2
//modulo comprobarcasilla
//modulo buscar_tipo_casilla



int dados(int casilla)
{char tirar;
  int dado1, dado2,dadototal;

printf("Haz clic en la tecla para lanzar el dado:");
scanf("%c", &tirar);

if(tirar=='\n')
{ dado1=(rand() % 6)+1;
  printf("En el dado 1 has sacado un %d\n", dado1);

    if(casilla>=60)
    {dado2=0;}
    else
    {dado2=(rand() % 6)+1;}

  printf("En el dado 2 has sacado un %d\n", dado2);
  dadototal=dado1+dado2;

printf("La suma de los dados es %d\n", dadototal);
}


return dadototal;  
}

char buscar_tipo_casilla(int casilla)
{char tipoCasilla;
char tiposdeCasilla[64]={'n','n','n','n','n','o','b','n','n','o','n','n','n','n','o','n','n','n','o','h','n','n','n','o','n','n','d','o','n','n','n','p','o','n','n','n','o','n','n','n','n','o','l','n','n','o','n','n','n','n','o','n','c','d','o','n','n','n','m','o','n','n','n','f'};

int posicion_array=0;
while(posicion_array!=casilla)
{
 posicion_array++;
}
tipoCasilla=tiposdeCasilla[posicion_array];

return tipoCasilla;
}

int comprobar_casilla(int num_casilla)
{char tipo_casilla=buscar_tipo_casilla(num_casilla);
int i=0;

switch(tipo_casilla){

  case 'o':
    printf("de oca a oca y tiro porque me toca\n");
    if(num_casilla==5||num_casilla==14||num_casilla==23||num_casilla==32||num_casilla==41||num_casilla==45||num_casilla==54){
      num_casilla=num_casilla+4;
      num_casilla=num_casilla+dados(num_casilla);  

    }
    else{
     num_casilla=num_casilla+5;
     num_casilla=num_casilla+dados(num_casilla);
    } 
    break;

  
  case 'b': //puente
    	printf("Has caido en el puente e iras a la casilla de la posada\n");
      num_casilla=19; //casilla posada;
      break;
   

  case 'h': //posada
    printf("Has caido en la casilla de la posada, estaras 1 turno sin tirar\n");
      num_casilla=num_casilla;//pierde turno;
    

  case 'd': //dados
    printf("Has caido en la casilla de dados, te desplazar치s hasta la otra casilla de dados y volver치s a tirar\n");
    if(num_casilla=26){
      num_casilla=53;
      num_casilla=num_casilla+dados(num_casilla);
    }
    else{
      num_casilla=26;
     num_casilla=num_casilla+dados(num_casilla);
      
      
    }
    break;
  case 'p': //pozo
   
   printf("Has caido en el pozo, estar치s 3 turnos sin tirar\n");
      
      for(i=0;i<3;i++)
      {num_casilla=num_casilla;}//pierde 3 turnos;
    

  break;

  case 'l'://laberinto
    printf("Has caido en el laberinto,retrocede hasta la casilla 30\n");
    num_casilla=30;
    break;

  case 'c'://carcel
    
    printf("Has caido en el pozo, estar치s 5 turnos sin tirar\n");
       for(i=0;i<5;i++)
      {num_casilla=num_casilla;}//pierde 5 turnos;
    
    
    break;


  case 'm'://muerte
printf("Has caido en la muerte, vuelve a la casilla inicial\n");
    num_casilla=0;
    break;

  case 'f':
printf("Has ganado, enhorabuena\n");
   
    break;

  default:
    
    break;
}

return num_casilla;}






/*turno del jugador 1,realiza tirada, se calcula el valor nuevo de la casilla y se comprueba el tipo de casilla, en caso de 
casillas especiales se volvera a calcular el nuevo valor de la casilla*/

int jugador1(int casilla_jug1)
{int valor_dado=0,casilla_anterior,casilla_intermedia;
int i=0;

int turnos_perdidos;

for(i=0;i<4;i++)
{printf("\n");}


printf("Turno para el jugador 1\n");
valor_dado=dados(casilla_jug1);
casilla_anterior=casilla_jug1;
casilla_jug1=casilla_anterior+valor_dado;
casilla_anterior=casilla_jug1;
casilla_intermedia=comprobar_casilla(casilla_anterior);
casilla_jug1=comprobar_casilla(casilla_intermedia);
if(casilla_jug1>63)
{casilla_jug1-=valor_dado;}

return casilla_jug1;
}


int jugador2(int casilla_jug2)
{int valor_dado=0,casilla_anterior,casilla_intermedia;
int i;
for(i=0;i<4;i++)
{printf("\n");}

printf("Turno para el jugador 2\n");
valor_dado=dados(casilla_jug2);
casilla_anterior=casilla_jug2;
casilla_jug2=casilla_anterior+valor_dado;
casilla_anterior=casilla_jug2;
casilla_intermedia=comprobar_casilla(casilla_anterior);
casilla_jug2=comprobar_casilla(casilla_intermedia);
if(casilla_jug2>63)
{casilla_jug2-=valor_dado;}

return casilla_jug2;
}





int main()
{int casilla_inicial_jug1=0,casilla_inicial_jug2=0;
int casilla_final_jug1,casilla_final_jug2;
int turnos_perdidos=0;


srand(time(NULL)); 

  while(casilla_final_jug1<64&&casilla_final_jug1!=63&&casilla_final_jug2<64&&casilla_final_jug2!=63)
	{ 

 /* while()
  casilla_final_jug1=jugador1(casilla_inicial_jug1);

  casilla_inicial_jug1=casilla_final_jug1;
  if(casilla_inicial_jug1==19){
  
  turnos_perdidos=1
  }
  if(casilla_inicial_jug1!=19||casilla_inicial_jug1!=31||casilla_inicial_jug1!=52){
  
  turnos_perdidos=0;
  }
  if(casilla_inicial_jug1==31){
  
  turnos_perdidos=3;
  }
  if(casilla_inicial_jug1==52){
  
  turnos_perdidos=5;
  }
  if(turnos_perdidos!=0){
  
  turnos_perdidos=turnos_perdidos-1
  }*/
  casilla_final_jug1=jugador1(casilla_inicial_jug1);
  casilla_inicial_jug1=casilla_final_jug1;//guardamos el valor de la casilla actual del jugador 1 para poder cambiarlo en la siguiente tirada
  printf("El jugador 1 se encuentra en la casilla %d\n",casilla_final_jug1);
  casilla_final_jug2=jugador2(casilla_inicial_jug2);
  printf("El jugador 2 se encuentra en la casilla %d\n",casilla_final_jug2);
  casilla_inicial_jug2=casilla_final_jug2;//guardamos el valor de la casilla actual del jugador 2 para poder cambiarlo en la siguiente tirada
  }


return 0;}

   









